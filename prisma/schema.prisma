// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// Modele Utilisateur: stocke les comptes utilisateurs et indicateur d administration
model Utilisateur {
  id               Int                 @id @default(autoincrement())
  prenom           String
  nom              String
  email            String              @unique
  motDePasseHash   String
  isAdmin          Boolean             @default(false)
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @default(now()) @updatedAt
  lastLogin         DateTime?
  verificationCodes VerificationCode[]
  reservations     UtilisationSalle[]
}
model VerificationCode {
  id                Int           @id @default(autoincrement())
  utilisateurId     Int?
  email             String
  code              String
  createdAt         DateTime      @default(now())
  expiresAt         DateTime
  utilisateur       Utilisateur?  @relation(fields: [utilisateurId], references: [id])
   @@index([utilisateurId])
}

model Salle {
  id               Int                 @id @default(autoincrement())
  nom              String              @unique
  capacite         Int
  emplacement       String
  equipements      SalleEquipement[]
  reservations     UtilisationSalle[]
}

model Equipement {
  id               Int                 @id @default(autoincrement())
  nom              String              @unique
  salles           SalleEquipement[]
}

model SalleEquipement {
  salleId          Int
  equipementId     Int

  salle            Salle               @relation(fields: [salleId], references: [id])
  equipement       Equipement          @relation(fields: [equipementId], references: [id])

  @@id([salleId, equipementId])
}

model UtilisationSalle {
  id                Int        @id @default(autoincrement())
  utilisateurId     Int
  salleId           Int
  dateCreation      DateTime   @default(now()) // quand la réservation est faite
  dateUtilisation   DateTime   // jour d’utilisation
  heureUtilisation  DateTime   // heure exacte à laquelle l’utilisateur veut la salle

  utilisateur       Utilisateur @relation(fields: [utilisateurId], references: [id])
  salle             Salle       @relation(fields: [salleId], references: [id])
}


model HistoriqueAction {
  id        Int      @id @default(autoincrement())
  adminId   Int
  action    String
  details   String
  timestamp DateTime @default(now())
}

